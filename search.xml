<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo使用DisqusJS评论系统]]></title>
    <url>%2F2019%2F07%2F29%2FHexo%E4%BD%BF%E7%94%A8DisqusJS%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[由于一些不可描述的原因，在这片神奇的土地上无法直接访问Disqus，因此如果要体验一下使用得最广的Disqus评论系统，在配置上需要做一些简单的调整。以Hexo里Next主题为例，其它主题的配置也是类似的。打开next主题配置文件，找到disqusjs部分，发现有api，apikey, shortname三个内容需要填写 12345678910111213# DisqusJS# Alternative Disqus - Render comment component using Disqus API.# Demo: https://suka.js.org/DisqusJS/disqusjs: enable: true # API Endpoint of Disqus API (https://disqus.com/api/). # Leave api empty if you are able to connect to Disqus API. # Otherwise you need a reverse proxy for Disqus API. # For example: # api: https://disqus.skk.moe/disqus/ api: apikey: shortname: api部分由于大部分人都不能以正常途径访问disqus，因此api的部分需要填写一个代理服务器的地址，可以使用DisqusJS作者提供的代理，也可以在自己VPS上创建一个代理。以 nginx 为例，在你的站点配置中添加一行： 123location /disqus/ &#123; proxy_pass https://disqus.com/;&#125; 然后重启nginx 1service nginx reload 打开https://你的域名/disqus/api/3.0/threads/list.json ，如果返回的内容如下 1&#123;"code":5,"response":"Invalid API key"&#125; 则说明代理配置成功。然后在_config.yml文件中，api就可以填写成 12345678disqusjs: enable: true # API Endpoint of Disqus API (https://disqus.com/api/). # Leave api empty if you are able to connect to Disqus API. # Otherwise you need a reverse proxy for Disqus API. # For example: # api: https://disqus.skk.moe/disqus/ api: https://你的域名/disqus/api/ 配置 Disqus Application首先在Disqus API Application 处注册一个 Application.然后就可以获得API key同时需要在 Application 的 Settings 页面设置你的域名，如果怕麻烦直接填入disqus.com即可。 注册一个disqus账户进入Disqus主页，点击GET STARTED然后选择安装Disqus到自己的网站输入自己的名称，可以随意，下面提示的内容，即是后续的shortname。后续根据提示完成注册即可。 完成重新部署一下，就可以显示评论了，但是如果网页的访问者没有办法访问Disqus网页，他也没有办法发表评论，只能显示“评论基础模式”。]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>DisqusJS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OneDrive备份同步任意文件夹]]></title>
    <url>%2F2018%2F01%2F23%2FOneDrive%E5%A4%87%E4%BB%BD%E5%90%8C%E6%AD%A5%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%A4%B9%2F</url>
    <content type="text"><![CDATA[比如我需要将F:\test_folder同步到D:\OneDrive\Sync\目录下 首先在到D:\OneDrive，创建Sync文件夹 打开命令行，创建一个硬链接 1mklink /d "D:\OneDriv\Sync\test_folder" F:\test_folder 即可。F:\test_folder内容会自动同步上去 如果删除D:\OneDriv\Sync下面的test_folder文件夹，不会影响到F:\test_folder文件夹，因为D:\OneDriv\Sync\test_folder只是一个链接而已。但是删除后会把云盘里面的内容也删掉]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>默认</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[root用户访问文件被拒绝]]></title>
    <url>%2F2017%2F07%2F28%2Froot%E8%AE%BF%E9%97%AE%E6%96%87%E4%BB%B6%E8%A2%AB%E6%8B%92%E7%BB%9D%2F</url>
    <content type="text"><![CDATA[有时候在linux系统中尝试删除或者修改某个文件时候，会被拒绝，即使是使用了root权限。这很可能是因为在文件的扩展属性中设置了immutable标记。如下所示 123456789root@localhost:~# touch immutable-fileroot@localhost:~# chattr +i immutableroot@localhost:~# ll immutable-file-rw-r--r-- 1 root root 0 Jul 28 08:07 immutable-fileroot@localhost:~# lsattr immutable-file----i--------e-- immutable-fileroot@localhost:~# rm -f immutable-filerm: cannot remove 'immutable-file': Operation not permittedroot@localhost:~# 可以用以下方法解决 12345root@localhost:~# chattr -i immutable-fileroot@localhost:~# lsattr immutable-file-------------e-- immutable-fileroot@localhost:~# rm -f immutable-fileroot@localhost:~#]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo插入本地图片]]></title>
    <url>%2F2016%2F12%2F28%2FHexo%E6%8F%92%E5%85%A5%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[安装插件1npm install hexo-asset-image 打开配置改配置项打开之后，以后使用hexo new &quot;新的一篇文章&quot;命令新建博客的时候，都会在新的一篇文章.md的文件目录下创建一个同名的新的一篇文章文件夹。我们需要把待插入文章的图片预先放在这个文件夹中。如果有的文章没有图片，也不想被hexo自动创建这个空的文件夹，可以手动在source/_post/目录下，手动创建一个md文件 插入文件在需要插入的图片的位置，使用如下命令即可。 1![这是一个图片](./测试图片.png) 使用这种方式插入的图片，由于路径的差异，在markdown的编辑器中没有办法正常显示，但是不影响hexo本地预览及部署。]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建个人博客]]></title>
    <url>%2F2016%2F12%2F27%2FHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Hexo是基于Node.js的一个快速、简洁且高效的静态博客框架，它的主要特点应该就是支持Markdown语言了，这对于有码字需求的程序员来说，就可以不用借助外部工具，实现代码的完美显示。 本地安装Hexo使用环境Hexo分为本地端与服务器两个部分，所有的书写内容都在本地端基于Markdown语言完成，经过类似于编译的步骤后，再使用git工具部署到远端的服务器，从而实现内容的显示。 安装Git下载符合自己操作系统的版本，根据提示安装即可，完成后，打开Git Bash，输入git version命令，能正确显示版本号即安装成功。 然后进行一些初始化设置 12git config --global user.name "用户名"git config --global user.email "邮箱地址" 最后生成一对部署时候git commit到服务器的ssh密钥。如果是在windows下面执行，需要先设置好HOME环境变量，生成的密钥就在HOME变量指向的文件夹内。生产密钥的命令如下: 1ssh-keygen -t rsa -C "邮箱地址" 如果有需要，也可以输入密码对这个密钥进行加密，如果设置了密码，后续每一次deploy的时候都需要输入密码。 使用一下的命令查看查看公钥，后续需要把这个公钥复制到deploy的服务器上 1cat ~/.ssh/id_rsa.pub 安装Node.js直接根据自己操作系统版本下载安装即可。 安装Hexo打开Git Bash，输入下面命令安装Hexo 1npm install hexo-cli -g 待安装完成后，在适当的位置创建一个文件夹（例如hexo），后续所有本地的博客源文件，包括hexo的配置文件，都在这个文件夹内。在刚创建的hexo文件夹内，打开Git Bash，输入下面命令对文件夹结构进行初始化。 12hexo initnpm install 完成后，文件夹的结果如下图所示至此，Hexo本地端安装完毕，后续根据需要会继续安装一些插件及修改Hexo的配置。 部署到Github在本地完成的写作内容，经过hexo generate之后，会在public文件夹中生产html网页文件，而部署的过程，就相当于把这些生成的文件发布到web服务器中，提供给用户访问。Github提供了一个类似的web服务器，大家无需申请域名即可发布自己的博客内容。部署到Github的方法如下。 创建一个repo登录Github，创建一个名为xxx.gihub.io的repo。需要注意的事，这里xxx部分需用与自己github账号同名。比如Github用户名是kirka，那么需要创建的repo名称为krika.githu.io。创建完成后，打开github设置页面，添加之前创建的SSH公钥进去。 测试连接输入ssh -T git@github.com命令，测试与Github的连接，输出如下代表连接正常。 完成部署打开Hexo的配置文件_config.yml，在文件最后deploy部分加入如下内容。 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:- type: git repo: git@github.com:用户名/用户名.github.io branch: master 然后直接使用hexo d命令完成部署。 最后，你就拥有了一个地址为http://用户名.github.io的个人网站。 部署到自己的服务器如果你拥有自己的VPS服务器及域名，并且已经做好了DNS解析，也可以按照如下步骤将博客内容部署到自己的服务器上。 安装Git以root用户，使用SSH等方式登录到自己服务器，以Ubutu为例，执行apt install git命令安装git。 创建git用户为了安全，需要在vps新建一个专门的用户来完成git部署过程，用户名可以任意，以下以git为例进行说明。输入以下命令根据提示输入密码。 1adduser git 用于只需要使用改git用户完成部署，为了安全我们可以关闭git用户的shell权限。 1vim /etc/passwd 找到刚新加的git用户，将原本的 1git:x:1000:1000:,,,:/home/git:/bin/bash 改为 1git:x:1000:1000:,,,:/home/git:/usr/bin/git-shell 并保存退出。 配置git仓库以下命令都通过root用户执行。 1234cd /home/git mkdir blog.git //创建git仓库文件夹，以blog.git为例cd blog.gitgit init --bare //使用--bare参数初始化为裸仓库 接下来，为了使本地客户端能够正常的登录到vps，同样需要把本地端生成的ssh公钥复制到vps中。 123cd /home/gitmkdir .sshvim .ssh/authorized_keys 将本地的公钥内容复制到authorized_keys文件中，再保存退出。最后使用下面命令刚刚root创建的所有文件权限转移到git。 1chown -R git:git /home/git 安装Nginx用于Ubuntu 16.04源中带的Nginx不是最新的，我们直接从官网安装最新的Nginx。 12wget http://nginx.org/keys/nginx_signing.keyapt-key add nginx_signing.key 在 /etc/apt/sources.list 文件中加入下面两行： 12deb http://nginx.org/packages/ubuntu/ xenial nginxdeb-src http://nginx.org/packages/ubuntu/ xenial nginx 然后再安装 12apt updateapt install nginx 安装完成后，创建一个文件夹，用于存放发布的网页文件。 1mkdir /var/www/blog 然后对Nginx进行配置 1vim /etc/nginx/conf.d/default.conf 参考输入以下内容，需要注意的是，我这里使用了http传输，并且把所有的http连接自动转为https。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748server &#123; listen 80; server_name lyth.cf; rewrite ^(.*)$ https://$&#123;server_name&#125;$1 permanent;&#125;server &#123; listen 443 ssl; server_name lyth.cf; root /var/www/blog; index index.html index.htm index.nginx-debian.html; ssl_certificate /etc/nginx/ssl/lyth.cf/fullchain.cer; ssl_certificate_key /etc/nginx/ssl/lyth.cf/lyth.cf.key; ssl_session_timeout 5m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; ssl_prefer_server_ciphers on; ssl_session_cache builtin:1000 shared:SSL:10m; # openssl dhparam -out /usr/local/nginx/conf/ssl/dhparam.pem 2048 ssl_dhparam /etc/nginx/ssl/dhparam.pem; access_log /var/log/nginx/blog_access.log; error_log /var/log/nginx/blog_error.log; error_page 404 = /404.html; location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ &#123; root /var/www/blog; access_log off; expires 1d; &#125; location ~* ^.+\.(css|js|txt|xml|swf|wav)$ &#123; root /var/www/blog; access_log off; expires 10m; &#125; location / &#123; root /var/www/blog; if (-f $request_filename) &#123; rewrite ^/(.*)$ /$1 break; &#125; &#125; location /nginx_status &#123; stub_status on; access_log off; &#125;&#125; 设置权限，启动Nginx 123chown -R git:git /var/www/blogsystemctl start nginxsystemctl enable nginx //开机自动启动 配置Git Hooks在上面的步骤完成后，本地端deploy的文件只是存在了VPS的repo里，还需要配置好一个hook文件，在本地端deploy之后，git会自动将网页导入到/var/www/blog目录中。 1vim /home/git/blog.git/hooks/post-receive 复制以下内容到post-receive文件中 12345678#!/bin/bashGIT_REPO=/home/git/blog.gitTMP_GIT_CLONE=/tmp/blogPUBLIC_WWW=/var/www/blogrm -rf $&#123;TMP_GIT_CLONE&#125;git clone $GIT_REPO $TMP_GIT_CLONErm -rf $&#123;PUBLIC_WWW&#125;/*cp -rf $&#123;TMP_GIT_CLONE&#125;/* $&#123;PUBLIC_WWW&#125; 保存退出，再执行 12chmod +x /home/git/blog.git/hooks/post-receivechown git:git /home/git/blog.git/hooks/post-receive 至此，VPS端的配置已经全部结束。 本地操作打开Hexo的配置文件_config.yml，在文件最后deploy部分加入如下内容。 123456789# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:- type: git repo: git@github.com:用户名/用户名.github.io branch: master- type: git repo: git@lyth.cf:blog.git branch: master 然后直接使用hexo d命令完成部署。]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2016%2F12%2F25%2Fhello-world%2F</url>
    <content type="text"><![CDATA[这是一篇需要密码才能访问的文章~ Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>默认</tag>
      </tags>
  </entry>
</search>
