<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo使用DisqusJS评论系统]]></title>
    <url>%2F2019%2F07%2F29%2FHexo%E4%BD%BF%E7%94%A8DisqusJS%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[由于一些不可描述的原因，在这片神奇的土地上无法直接访问Disqus，因此如果要体验一下使用得最广的Disqus评论系统，在配置上需要做一些简单的调整。以Hexo里Next主题为例，其它主题的配置也是类似的。打开next主题配置文件，找到disqusjs部分，发现有api，apikey, shortname三个内容需要填写 12345678910111213# DisqusJS# Alternative Disqus - Render comment component using Disqus API.# Demo: https://suka.js.org/DisqusJS/disqusjs: enable: true # API Endpoint of Disqus API (https://disqus.com/api/). # Leave api empty if you are able to connect to Disqus API. # Otherwise you need a reverse proxy for Disqus API. # For example: # api: https://disqus.skk.moe/disqus/ api: apikey: shortname: api部分由于大部分人都不能以正常途径访问disqus，因此api的部分需要填写一个代理服务器的地址，可以使用DisqusJS作者提供的代理，也可以在自己VPS上创建一个代理。以 nginx 为例，在你的站点配置中添加一行： 123location /disqus/ &#123; proxy_pass https://disqus.com/;&#125; 然后重启nginx 1service nginx reload 打开https://你的域名/disqus/api/3.0/threads/list.json ，如果返回的内容如下 1&#123;"code":5,"response":"Invalid API key"&#125; 则说明代理配置成功。然后在_config.yml文件中，api就可以填写成 12345678disqusjs: enable: true # API Endpoint of Disqus API (https://disqus.com/api/). # Leave api empty if you are able to connect to Disqus API. # Otherwise you need a reverse proxy for Disqus API. # For example: # api: https://disqus.skk.moe/disqus/ api: https://你的域名/disqus/api/ 配置 Disqus Application首先在Disqus API Application 处注册一个 Application.然后就可以获得API key同时需要在 Application 的 Settings 页面设置你的域名，如果怕麻烦直接填入disqus.com即可。 注册一个disqus账户进入Disqus主页，点击GET STARTED然后选择安装Disqus到自己的网站输入自己的名称，可以随意，下面提示的内容，即是后续的shortname。后续根据提示完成注册即可。 完成重新部署一下，就可以显示评论了，但是如果网页的访问者没有办法访问Disqus网页，他也没有办法发表评论，只能显示“评论基础模式”。]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>DisqusJS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Apache的SVN服务器搭建]]></title>
    <url>%2F2018%2F05%2F26%2F%E5%9F%BA%E4%BA%8EApache%E7%9A%84SVN%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[基于ubuntu18.04lts 安装123apt install subversion apache2 libapache2-mod-svna2enmod dav_svn # enable dav_svn Apache modulea2enmod authz_svn # enable the authz_svn module 建立SVN repo123svnadmin create /home/svn/test_repochown -R www-data:www-data /home/svn/test_repovim /home/svn/test_repo/conf/authz 编辑authz文件设置权限，文件如下 12345678910111213[groups]team = testuser1devteam = testuser1, testuser2[/]@team = r@devteam = rwtestuser1 = rw[/wowapp/trunk]@team = r@devteam = rwtestuser2 = r 创建svn用户1234htpasswd -cB /etc/apache2/subversion-auth testuser1 #第一次创建用户，同时创建文件htpasswd -B /etc/apache2/subversion-auth testuser2 #后续用户chgrp www-data /etc/apache2/subversion-authchmod 660 /etc/apache2/subversion-auth 配置Apache配置端口号1vim /etc/apache2/ports.conf 使用编辑默认文件1vim /etc/apache2/sites-available/000-default.conf 在virtualhost之间加入 123456789&lt;Location /svn&gt; DAV svn SVNParentPath /home/svn AuthType Basic AuthName &quot;Your repository name&quot; AuthUserFile /etc/apache2/subversion-auth AuthzSVNAccessFile /home/svn/test_repo/conf/authz Require valid-user&lt;/Location&gt; 并且改端口号 1&lt;VirtualHost *:8079&gt; 1systemctl status apache2.service 配置nginx代理12345678910111213141516location /svn/ &#123; proxy_pass http://localhost:8079/svn/; proxy_redirect http://localhost:8079/ https://epdoc.top/; #nginx在做反向代理到后端服务器，如果后端服务器有重定向，会出现返回服务器的ip地址，解决办法： #proxy_set_header Host $host; #proxy_set_header X-Real-IP $remote_addr; #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; #proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504; #proxy_max_temp_file_size 0; #proxy_connect_timeout 90; #proxy_send_timeout 90; #proxy_read_timeout 90; #proxy_buffer_size 4k; #proxy_buffers 4 32k; #proxy_busy_buffers_size 64k; #proxy_temp_file_write_size 64k; &#125; 注意：SVN服务自身不需要配置、启动什么的 参考 https://www.tecmint.com/install-apache-subversion-svn-tortoisesvn-centos-debian-ubuntu/ https://help.ubuntu.com/lts/serverguide/subversion.html.en https://velusaravana.wordpress.com/2013/10/03/invalid-command-authzsvnaccessfile-perhaps-misspelled-or-defined-by-a-module-not-included-in-the-server-configuration/]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Apache</tag>
        <tag>SVN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OneDrive备份同步任意文件夹]]></title>
    <url>%2F2018%2F01%2F23%2FOneDrive%E5%A4%87%E4%BB%BD%E5%90%8C%E6%AD%A5%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%A4%B9%2F</url>
    <content type="text"><![CDATA[比如我需要将F:\test_folder同步到D:\OneDrive\Sync\目录下 首先在到D:\OneDrive，创建Sync文件夹 打开命令行，创建一个硬链接 1mklink /d "D:\OneDriv\Sync\test_folder" F:\test_folder 即可。F:\test_folder内容会自动同步上去 如果删除D:\OneDriv\Sync下面的test_folder文件夹，不会影响到F:\test_folder文件夹，因为D:\OneDriv\Sync\test_folder只是一个链接而已。但是删除后会把云盘里面的内容也删掉]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>默认</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[root用户访问文件被拒绝]]></title>
    <url>%2F2017%2F07%2F28%2Froot%E8%AE%BF%E9%97%AE%E6%96%87%E4%BB%B6%E8%A2%AB%E6%8B%92%E7%BB%9D%2F</url>
    <content type="text"><![CDATA[有时候在linux系统中尝试删除或者修改某个文件时候，会被拒绝，即使是使用了root权限。这很可能是因为在文件的扩展属性中设置了immutable标记。如下所示 123456789root@localhost:~# touch immutable-fileroot@localhost:~# chattr +i immutableroot@localhost:~# ll immutable-file-rw-r--r-- 1 root root 0 Jul 28 08:07 immutable-fileroot@localhost:~# lsattr immutable-file----i--------e-- immutable-fileroot@localhost:~# rm -f immutable-filerm: cannot remove 'immutable-file': Operation not permittedroot@localhost:~# 可以用以下方法解决 12345root@localhost:~# chattr -i immutable-fileroot@localhost:~# lsattr immutable-file-------------e-- immutable-fileroot@localhost:~# rm -f immutable-fileroot@localhost:~#]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo插入本地图片]]></title>
    <url>%2F2016%2F12%2F28%2FHexo%E6%8F%92%E5%85%A5%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[安装插件1npm install hexo-asset-image 打开配置改配置项打开之后，以后使用hexo new &quot;新的一篇文章&quot;命令新建博客的时候，都会在新的一篇文章.md的文件目录下创建一个同名的新的一篇文章文件夹。我们需要把待插入文章的图片预先放在这个文件夹中。如果有的文章没有图片，也不想被hexo自动创建这个空的文件夹，可以手动在source/_post/目录下，手动创建一个md文件 插入文件在需要插入的图片的位置，使用如下命令即可。注意图片的命名不能有空格。 1![这是一个图片](./测试图片.png) 使用这种方式插入的图片，由于路径的差异，在markdown的编辑器中没有办法正常显示，但是不影响hexo本地预览及部署。]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建个人博客]]></title>
    <url>%2F2016%2F12%2F27%2FHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Hexo是基于Node.js的一个快速、简洁且高效的静态博客框架，它的主要特点应该就是支持Markdown语言了，这对于有码字需求的程序员来说，就可以不用借助外部工具，实现代码的完美显示。 本地安装Hexo使用环境Hexo分为本地端与服务器两个部分，所有的书写内容都在本地端基于Markdown语言完成，经过类似于编译的步骤后，再使用git工具部署到远端的服务器，从而实现内容的显示。 安装Git下载符合自己操作系统的版本，根据提示安装即可，完成后，打开Git Bash，输入git version命令，能正确显示版本号即安装成功。 然后进行一些初始化设置 12git config --global user.name "用户名"git config --global user.email "邮箱地址" 最后生成一对部署时候git commit到服务器的ssh密钥。如果是在windows下面执行，需要先设置好HOME环境变量，生成的密钥就在HOME变量指向的文件夹内。生产密钥的命令如下: 1ssh-keygen -t rsa -C "邮箱地址" 如果有需要，也可以输入密码对这个密钥进行加密，如果设置了密码，后续每一次deploy的时候都需要输入密码。 使用一下的命令查看查看公钥，后续需要把这个公钥复制到deploy的服务器上 1cat ~/.ssh/id_rsa.pub 安装Node.js直接根据自己操作系统版本下载安装即可。 安装Hexo打开Git Bash，输入下面命令安装Hexo 1npm install hexo-cli -g 待安装完成后，在适当的位置创建一个文件夹（例如hexo），后续所有本地的博客源文件，包括hexo的配置文件，都在这个文件夹内。在刚创建的hexo文件夹内，打开Git Bash，输入下面命令对文件夹结构进行初始化。 12hexo initnpm install 完成后，文件夹的结果如下图所示至此，Hexo本地端安装完毕，后续根据需要会继续安装一些插件及修改Hexo的配置。 部署到Github在本地完成的写作内容，经过hexo generate之后，会在public文件夹中生产html网页文件，而部署的过程，就相当于把这些生成的文件发布到web服务器中，提供给用户访问。Github提供了一个类似的web服务器，大家无需申请域名即可发布自己的博客内容。部署到Github的方法如下。 创建一个repo登录Github，创建一个名为xxx.gihub.io的repo。需要注意的事，这里xxx部分需用与自己github账号同名。比如Github用户名是kirka，那么需要创建的repo名称为krika.githu.io。创建完成后，打开github设置页面，添加之前创建的SSH公钥进去。 测试连接输入ssh -T git@github.com命令，测试与Github的连接，输出如下代表连接正常。 完成部署打开Hexo的配置文件_config.yml，在文件最后deploy部分加入如下内容。 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:- type: git repo: git@github.com:用户名/用户名.github.io branch: master 然后直接使用hexo d命令完成部署。 最后，你就拥有了一个地址为http://用户名.github.io的个人网站。 部署到自己的服务器如果你拥有自己的VPS服务器及域名，并且已经做好了DNS解析，也可以按照如下步骤将博客内容部署到自己的服务器上。 安装Git以root用户，使用SSH等方式登录到自己服务器，以Ubutu为例，执行apt install git命令安装git。 创建git用户为了安全，需要在vps新建一个专门的用户来完成git部署过程，用户名可以任意，以下以git为例进行说明。输入以下命令根据提示输入密码。 1adduser git 用于只需要使用改git用户完成部署，为了安全我们可以关闭git用户的shell权限。 1vim /etc/passwd 找到刚新加的git用户，将原本的 1git:x:1000:1000:,,,:/home/git:/bin/bash 改为 1git:x:1000:1000:,,,:/home/git:/usr/bin/git-shell 并保存退出。 配置git仓库以下命令都通过root用户执行。 1234cd /home/git mkdir blog.git //创建git仓库文件夹，以blog.git为例cd blog.gitgit init --bare //使用--bare参数初始化为裸仓库 接下来，为了使本地客户端能够正常的登录到vps，同样需要把本地端生成的ssh公钥复制到vps中。 123cd /home/gitmkdir .sshvim .ssh/authorized_keys 将本地的公钥内容复制到authorized_keys文件中，再保存退出。最后使用下面命令刚刚root创建的所有文件权限转移到git。 1chown -R git:git /home/git 安装Nginx用于Ubuntu 16.04源中带的Nginx不是最新的，我们直接从官网安装最新的Nginx。 12wget http://nginx.org/keys/nginx_signing.keyapt-key add nginx_signing.key 在 /etc/apt/sources.list 文件中加入下面两行： 12deb http://nginx.org/packages/ubuntu/ xenial nginxdeb-src http://nginx.org/packages/ubuntu/ xenial nginx 然后再安装 12apt updateapt install nginx 安装完成后，创建一个文件夹，用于存放发布的网页文件。 1mkdir /var/www/blog 然后对Nginx进行配置 1vim /etc/nginx/conf.d/default.conf 参考输入以下内容，需要注意的是，我这里使用了http传输，并且把所有的http连接自动转为https。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748server &#123; listen 80; server_name lyth.cf; rewrite ^(.*)$ https://$&#123;server_name&#125;$1 permanent;&#125;server &#123; listen 443 ssl; server_name lyth.cf; root /var/www/blog; index index.html index.htm index.nginx-debian.html; ssl_certificate /etc/nginx/ssl/lyth.cf/fullchain.cer; ssl_certificate_key /etc/nginx/ssl/lyth.cf/lyth.cf.key; ssl_session_timeout 5m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; ssl_prefer_server_ciphers on; ssl_session_cache builtin:1000 shared:SSL:10m; # openssl dhparam -out /usr/local/nginx/conf/ssl/dhparam.pem 2048 ssl_dhparam /etc/nginx/ssl/dhparam.pem; access_log /var/log/nginx/blog_access.log; error_log /var/log/nginx/blog_error.log; error_page 404 = /404.html; location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ &#123; root /var/www/blog; access_log off; expires 1d; &#125; location ~* ^.+\.(css|js|txt|xml|swf|wav)$ &#123; root /var/www/blog; access_log off; expires 10m; &#125; location / &#123; root /var/www/blog; if (-f $request_filename) &#123; rewrite ^/(.*)$ /$1 break; &#125; &#125; location /nginx_status &#123; stub_status on; access_log off; &#125;&#125; 设置权限，启动Nginx 123chown -R git:git /var/www/blogsystemctl start nginxsystemctl enable nginx //开机自动启动 配置Git Hooks在上面的步骤完成后，本地端deploy的文件只是存在了VPS的repo里，还需要配置好一个hook文件，在本地端deploy之后，git会自动将网页导入到/var/www/blog目录中。 1vim /home/git/blog.git/hooks/post-receive 复制以下内容到post-receive文件中 12345678#!/bin/bashGIT_REPO=/home/git/blog.gitTMP_GIT_CLONE=/tmp/blogPUBLIC_WWW=/var/www/blogrm -rf $&#123;TMP_GIT_CLONE&#125;git clone $GIT_REPO $TMP_GIT_CLONErm -rf $&#123;PUBLIC_WWW&#125;/*cp -rf $&#123;TMP_GIT_CLONE&#125;/* $&#123;PUBLIC_WWW&#125; 保存退出，再执行 12chmod +x /home/git/blog.git/hooks/post-receivechown git:git /home/git/blog.git/hooks/post-receive 至此，VPS端的配置已经全部结束。 本地操作打开Hexo的配置文件_config.yml，在文件最后deploy部分加入如下内容。 123456789# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:- type: git repo: git@github.com:用户名/用户名.github.io branch: master- type: git repo: git@lyth.cf:blog.git branch: master 然后直接使用hexo d命令完成部署。]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2016%2F12%2F25%2Fhello-world%2F</url>
    <content type="text"><![CDATA[这是一篇需要密码才能访问的文章~ Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>默认</tag>
      </tags>
  </entry>
</search>
